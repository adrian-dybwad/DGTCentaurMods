#!/bin/sh
set -eu

DEFAULT_HOSTNAME="raspberrypi"
NEW_HOSTNAME="dgtcentaur"
CONFIG="/boot/config.txt"
CMDLINEFILE="/boot/cmdline.txt"
PACKAGE="DGTCentaurMods"
DGTCM_PATH="/opt/${PACKAGE}"
DIST_PY="/usr/lib/python3/dist-packages"
BT_MAIN_D="/etc/bluetooth/main.conf.d"
APP_VENV="$DGTCM_PATH/venv"               # created later by your first-boot unit
SYMLINK="$DIST_PY/DGTCentaurMods"

mark_line="#dgtcentaurmods"

# --- helper: append-once
append_once() {
  file="$1"; line="$2"
  grep -qxF "$line" "$file" 2>/dev/null || printf '%s\n' "$line" >>"$file"
}

# --- Hardware config (idempotent)
if ! grep -q "$mark_line" "$CONFIG" 2>/dev/null; then
  cp -a "$CONFIG" "$CONFIG.bak" 2>/dev/null || true

  # enable SPI
  if grep -q '^#\?dtparam=spi=on' "$CONFIG"; then
    sed -i 's/^#\?dtparam=spi=on/dtparam=spi=on/' "$CONFIG"
  else
    append_once "$CONFIG" "dtparam=spi=on"
  fi

  # SPI1 overlay
  grep -q '^dtoverlay=spi1-3cs' "$CONFIG" || append_once "$CONFIG" "dtoverlay=spi1-3cs"

  # enable UART
  if grep -q '^#\?enable_uart=' "$CONFIG"; then
    sed -i 's/^#\?enable_uart=.*/enable_uart=1/' "$CONFIG"
  else
    append_once "$CONFIG" "enable_uart=1"
  fi

  append_once "$CONFIG" "$mark_line"
fi

# --- Remove serial console on cmdline (idempotent)
if [ -f "$CMDLINEFILE" ] && grep -q 'console=serial0' "$CMDLINEFILE"; then
  # drop the first token only; keep the rest intact
  tail_tokens="$(sed 's/^[^ ]* *//' "$CMDLINEFILE")"
  printf '%s\n' "$tail_tokens" > "$CMDLINEFILE"
fi

# --- Python import path symlink (idempotent)
mkdir -p "$DIST_PY"
# remove stale path only if it's a symlink/dir we own
[ -L "$SYMLINK" ] || [ -d "$SYMLINK" ] && rm -f "$SYMLINK" || true
ln -sfn "$DGTCM_PATH" "$SYMLINK"

# --- Authbind for port 80 (safe perms)
if command -v authbind >/dev/null 2>&1; then
  install -d -m 0755 /etc/authbind/byport
  if [ ! -e /etc/authbind/byport/80 ]; then
    install -m 0500 -o root -g authbind /dev/null /etc/authbind/byport/80
  fi
  # add 'pi' to authbind group if it exists
  getent group authbind >/dev/null 2>&1 && usermod -a -G authbind pi || true
fi

# --- Add user to gpio/kmem groups (only if groups exist)
getent group gpio >/dev/null 2>&1 && usermod -a -G gpio pi || true
getent group kmem >/dev/null 2>&1 && usermod -a -G kmem pi || true

# --- Bluetooth: use a drop-in, not editing main.conf
install -d -m 0755 "$BT_MAIN_D"
cat >/etc/bluetooth/main.conf.d/90-dgtcentaurmods.conf <<'EOF'
# Managed by DGTCentaurMods
[General]
DiscoverableTimeout = 0
PairableTimeout = 0
JustWorksRepairing = always
EOF

# --- Systemd: let packaging handle enable/start; fall back if needed
if command -v systemctl >/dev/null 2>&1; then
  systemctl daemon-reload || true
  # If you didnâ€™t use dh_installsystemd for these, keep enables here:
  systemctl enable rfcomm.service centaurmods-web.service DGTCentaurMods.service var-run-sdp.path var-run-sdp.service stopDGTController.service || true
  systemctl start  var-run-sdp.path || true
fi

# --- Hostname change (only if still default)
if [ "$(hostname)" = "$DEFAULT_HOSTNAME" ]; then
  sed -i "s/$DEFAULT_HOSTNAME/$NEW_HOSTNAME/g" /etc/hosts 2>/dev/null || true
  printf '%s\n' "$NEW_HOSTNAME" > /etc/hostname
fi

# --- Stockfish drop-in (pure local file moves, no network)
CENTAUR_ENGINE="/home/pi/centaur/engines"
if [ -x "$DGTCM_PATH/engines/stockfish_pi" ]; then
  install -d -o pi -g root -m 0755 "$CENTAUR_ENGINE"
  if [ -e "$CENTAUR_ENGINE/stockfish_pi" ]; then
    mv -f "$CENTAUR_ENGINE/stockfish_pi" "$CENTAUR_ENGINE/stockfish_pi.bak" || true
  fi
  mv "$DGTCM_PATH/engines/stockfish_pi" "$CENTAUR_ENGINE/stockfish_pi"
  chown -R pi:root "$CENTAUR_ENGINE"
fi

# --- Ensure fen.log exists
install -d -o pi -g pi -m 0755 /home/pi/centaur
install -o pi -g pi -m 0644 /dev/null /home/pi/centaur/fen.log 2>/dev/null || true

# --- Permissions
chown -R pi:pi "$DGTCM_PATH" || true
chown -R pi:root /home/pi/centaur || true

# No apt, no pip, no git here. Do those in a first-boot or oneshot service,
# and preferably offline (from files shipped inside the .deb).
exit 0
